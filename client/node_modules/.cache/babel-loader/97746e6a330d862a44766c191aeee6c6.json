{"ast":null,"code":"import { useState } from \"react\";\nimport api, { SERVER_URL } from \"../http/index\";\nimport io from \"socket.io-client\";\nconst socket = io.connect(SERVER_URL);\n\nfunction useRoom(setMembers, setMessage, setMessageHistory) {\n  const joinRoom = async (room, user_id) => {\n    socket.emit(\"join_room\", `room${room}`);\n    const membersAfterPost = await api.post(`/messages/room${room}/members`, {\n      user_id\n    }).then(res => res.data);\n    setMembers(membersAfterPost);\n  };\n\n  const leaveRoom = async (room, user_id) => {\n    socket.emit(\"leave_room\", `room${room}`);\n    await api.delete(`/messages/room${room}/members?user=${user_id}`);\n    setMembers([]);\n  };\n\n  const sendMessage = (user, message, roomId) => {\n    if (message.replace(/\\s+/g, '').length === 0) return;\n    socket.emit(\"send_message\", { ...user,\n      message,\n      room: `room${roomId}`\n    });\n    setMessage(\"\");\n  };\n\n  socket.on(\"receive_message\", data => {\n    setMessageHistory(prev => [data, ...prev]);\n  });\n  return {\n    joinRoom,\n    leaveRoom,\n    sendMessage\n  };\n}\n\nexport default useRoom;","map":{"version":3,"names":["useState","api","SERVER_URL","io","socket","connect","useRoom","setMembers","setMessage","setMessageHistory","joinRoom","room","user_id","emit","membersAfterPost","post","then","res","data","leaveRoom","delete","sendMessage","user","message","roomId","replace","length","on","prev"],"sources":["C:/Users/DENI/Desktop/код/vsCode/authJWT/client/src/hooks/useRoom.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nimport api, {SERVER_URL} from \"../http/index\"\r\nimport io from \"socket.io-client\"\r\nconst socket = io.connect(SERVER_URL)\r\n\r\n\r\nfunction useRoom(setMembers, setMessage, setMessageHistory) {\r\n    const joinRoom = async (room, user_id) => {\r\n        socket.emit(\"join_room\", `room${room}`)\r\n        const membersAfterPost = await api.post(`/messages/room${room}/members`, {user_id}).then(res => res.data)\r\n        setMembers(membersAfterPost)\r\n    }\r\n\r\n    const leaveRoom = async (room, user_id) => {\r\n        socket.emit(\"leave_room\", `room${room}`)\r\n        await api.delete(`/messages/room${room}/members?user=${user_id}`)\r\n        setMembers([])\r\n    }\r\n      \r\n    const sendMessage = (user, message, roomId) => {\r\n        if (message.replace(/\\s+/g, '').length === 0) return\r\n        socket.emit(\"send_message\", {...user, message, room: `room${roomId}`})\r\n        setMessage(\"\")\r\n    }\r\n\r\n    socket.on(\"receive_message\", (data) => {\r\n        setMessageHistory(prev => [data, ...prev])\r\n    })\r\n\r\n    return {joinRoom, leaveRoom, sendMessage}\r\n}\r\n\r\nexport default useRoom"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,GAAP,IAAaC,UAAb,QAA8B,eAA9B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAWH,UAAX,CAAf;;AAGA,SAASI,OAAT,CAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,iBAAzC,EAA4D;EACxD,MAAMC,QAAQ,GAAG,OAAOC,IAAP,EAAaC,OAAb,KAAyB;IACtCR,MAAM,CAACS,IAAP,CAAY,WAAZ,EAA0B,OAAMF,IAAK,EAArC;IACA,MAAMG,gBAAgB,GAAG,MAAMb,GAAG,CAACc,IAAJ,CAAU,iBAAgBJ,IAAK,UAA/B,EAA0C;MAACC;IAAD,CAA1C,EAAqDI,IAArD,CAA0DC,GAAG,IAAIA,GAAG,CAACC,IAArE,CAA/B;IACAX,UAAU,CAACO,gBAAD,CAAV;EACH,CAJD;;EAMA,MAAMK,SAAS,GAAG,OAAOR,IAAP,EAAaC,OAAb,KAAyB;IACvCR,MAAM,CAACS,IAAP,CAAY,YAAZ,EAA2B,OAAMF,IAAK,EAAtC;IACA,MAAMV,GAAG,CAACmB,MAAJ,CAAY,iBAAgBT,IAAK,iBAAgBC,OAAQ,EAAzD,CAAN;IACAL,UAAU,CAAC,EAAD,CAAV;EACH,CAJD;;EAMA,MAAMc,WAAW,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,MAAhB,KAA2B;IAC3C,IAAID,OAAO,CAACE,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,EAA4BC,MAA5B,KAAuC,CAA3C,EAA8C;IAC9CtB,MAAM,CAACS,IAAP,CAAY,cAAZ,EAA4B,EAAC,GAAGS,IAAJ;MAAUC,OAAV;MAAmBZ,IAAI,EAAG,OAAMa,MAAO;IAAvC,CAA5B;IACAhB,UAAU,CAAC,EAAD,CAAV;EACH,CAJD;;EAMAJ,MAAM,CAACuB,EAAP,CAAU,iBAAV,EAA8BT,IAAD,IAAU;IACnCT,iBAAiB,CAACmB,IAAI,IAAI,CAACV,IAAD,EAAO,GAAGU,IAAV,CAAT,CAAjB;EACH,CAFD;EAIA,OAAO;IAAClB,QAAD;IAAWS,SAAX;IAAsBE;EAAtB,CAAP;AACH;;AAED,eAAef,OAAf"},"metadata":{},"sourceType":"module"}