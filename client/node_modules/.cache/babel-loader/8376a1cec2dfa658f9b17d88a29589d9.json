{"ast":null,"code":"import AuthService from \"../services/AuthService\";\nimport { setUserData } from \"./userSlice\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    const res = await AuthService.login(email, password);\n    const accessToken = res.data.accessToken;\n    localStorage.setItem(\"token\", accessToken);\n    dispatch(setUserData(res.data));\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const registration = (name, email, password) => async dispatch => {\n  try {\n    const res = await AuthService.registration(name, email, password);\n    const accessToken = res.data.accessToken;\n    localStorage.setItem(\"token\", accessToken);\n    dispatch(setUserData(res.data));\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const checkAuth = () => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/refresh`, {\n      withCredentials: true\n    });\n    const accessToken = res.data.accessToken;\n    localStorage.setItem(\"token\", accessToken);\n    setIsAuth(true);\n    setUser(res.data.user);\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"names":["AuthService","setUserData","login","email","password","dispatch","res","accessToken","data","localStorage","setItem","e","console","log","registration","name","checkAuth","axios","get","API_URL","withCredentials","setIsAuth","setUser","user"],"sources":["C:/Users/DENI/Desktop/код/vsCode/authJWT/client/src/store/actionCreator.js"],"sourcesContent":["import AuthService from \"../services/AuthService\"\r\nimport { setUserData } from \"./userSlice\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        const res = await AuthService.login(email, password)\r\n        const accessToken = res.data.accessToken\r\n        localStorage.setItem(\"token\", accessToken)\r\n        dispatch(setUserData(res.data))\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const registration = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        const res = await AuthService.registration(name, email, password)\r\n        const accessToken = res.data.accessToken\r\n        localStorage.setItem(\"token\", accessToken)\r\n        dispatch(setUserData(res.data))\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const checkAuth = () => async (dispatch) => {\r\n      try {\r\n        const res = await axios.get(`${API_URL}/refresh`, {withCredentials: true})\r\n        const accessToken = res.data.accessToken\r\n        localStorage.setItem(\"token\", accessToken)\r\n        setIsAuth(true)\r\n        setUser(res.data.user)\r\n      } catch(e) {\r\n        console.log(e)\r\n      }\r\n    }"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EAC1D,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMN,WAAW,CAACE,KAAZ,CAAkBC,KAAlB,EAAyBC,QAAzB,CAAlB;IACA,MAAMG,WAAW,GAAGD,GAAG,CAACE,IAAJ,CAASD,WAA7B;IACAE,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,WAA9B;IACAF,QAAQ,CAACJ,WAAW,CAACK,GAAG,CAACE,IAAL,CAAZ,CAAR;EACH,CALD,CAKE,OAAMG,CAAN,EAAS;IACPC,OAAO,CAACC,GAAR,CAAYF,CAAZ;EACH;AACJ,CATM;AAWP,OAAO,MAAMG,YAAY,GAAG,CAACC,IAAD,EAAOZ,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;EACvE,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMN,WAAW,CAACc,YAAZ,CAAyBC,IAAzB,EAA+BZ,KAA/B,EAAsCC,QAAtC,CAAlB;IACA,MAAMG,WAAW,GAAGD,GAAG,CAACE,IAAJ,CAASD,WAA7B;IACAE,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,WAA9B;IACAF,QAAQ,CAACJ,WAAW,CAACK,GAAG,CAACE,IAAL,CAAZ,CAAR;EACH,CALD,CAKE,OAAMG,CAAN,EAAS;IACPC,OAAO,CAACC,GAAR,CAAYF,CAAZ;EACH;AACJ,CATM;AAWP,OAAO,MAAMK,SAAS,GAAG,MAAM,MAAOX,QAAP,IAAoB;EAC7C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMW,KAAK,CAACC,GAAN,CAAW,GAAEC,OAAQ,UAArB,EAAgC;MAACC,eAAe,EAAE;IAAlB,CAAhC,CAAlB;IACA,MAAMb,WAAW,GAAGD,GAAG,CAACE,IAAJ,CAASD,WAA7B;IACAE,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,WAA9B;IACAc,SAAS,CAAC,IAAD,CAAT;IACAC,OAAO,CAAChB,GAAG,CAACE,IAAJ,CAASe,IAAV,CAAP;EACD,CAND,CAME,OAAMZ,CAAN,EAAS;IACTC,OAAO,CAACC,GAAR,CAAYF,CAAZ;EACD;AACF,CAVE"},"metadata":{},"sourceType":"module"}