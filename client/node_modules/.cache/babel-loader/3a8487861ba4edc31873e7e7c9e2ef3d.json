{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DENI\\\\Desktop\\\\\\u043A\\u043E\\u0434\\\\vsCode\\\\authJWT\\\\client\\\\src\\\\pages\\\\SingleRoom\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport styles from \"./style.module.css\";\nimport io from \"socket.io-client\";\nimport api, { SERVER_URL } from '../../http/index';\nimport { addRoom } from '../../store/userSlice';\nimport axios from 'axios';\nimport { addMember } from '../../store/roomSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(SERVER_URL);\n\nconst SingleRoom = () => {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [messageHistory, setMessageHistory] = useState([]);\n  const {\n    id\n  } = useParams();\n  const user = useSelector(state => state.user);\n  const room = useSelector(state => state.room);\n  const dispatch = useDispatch();\n\n  function joinRoom(room) {\n    dispatch(addRoom(room));\n    dispatch(addMember({\n      roomId: id,\n      userId: user.id\n    }));\n    socket.emit(\"join_room\", `room${room}`);\n  }\n\n  function sendMessage(user, message, roomId) {\n    if (message.replace(/\\s+/g, '').length === 0) return;\n    socket.emit(\"send_message\", { ...user,\n      message,\n      room: `room${roomId}`\n    });\n    setMessage(\"\");\n  }\n\n  function handleKeydown(e) {\n    if (e.key === \"Enter\") {\n      sendMessage(user, message, id);\n    }\n  }\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const messagesFromServer = await api.get(`/messages/room${id}`).then(res => res.data);\n      setMessageHistory(messagesFromServer.reverse());\n    };\n\n    fetchMessages();\n    socket.on(\"receive_message\", data => {\n      setMessageHistory(prev => [data, ...prev]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.room,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/rooms\",\n      className: styles.close,\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Room \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), user.rooms.find(el => el == id) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.history,\n        children: messageHistory.map(mess => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.message,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: mess.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), mess.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.send,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n          onChange: e => setMessage(e.target.value),\n          value: message,\n          onKeyDown: e => handleKeydown(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendMessage(user, message, id),\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.history,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => joinRoom(id),\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SingleRoom, \"875G7zvaJpCU36odxqMHudvbNK0=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch];\n});\n\n_c = SingleRoom;\nexport default SingleRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleRoom\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Link","useParams","styles","io","api","SERVER_URL","addRoom","axios","addMember","socket","connect","SingleRoom","message","setMessage","messageHistory","setMessageHistory","id","user","state","room","dispatch","joinRoom","roomId","userId","emit","sendMessage","replace","length","handleKeydown","e","key","fetchMessages","messagesFromServer","get","then","res","data","reverse","on","prev","close","rooms","find","el","history","map","mess","name","send","target","value"],"sources":["C:/Users/DENI/Desktop/код/vsCode/authJWT/client/src/pages/SingleRoom/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport styles from \"./style.module.css\"\r\n\r\nimport io from \"socket.io-client\"\r\nimport api, { SERVER_URL } from '../../http/index';\r\nimport { addRoom } from '../../store/userSlice'\r\nimport axios from 'axios'\r\nimport { addMember } from '../../store/roomSlice'\r\nconst socket = io.connect(SERVER_URL)\r\n\r\nconst SingleRoom = () => {\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messageHistory, setMessageHistory] = useState([])\r\n\r\n    const {id} = useParams()\r\n\r\n    const user = useSelector(state => state.user)\r\n    const room = useSelector(state => state.room)\r\n    const dispatch = useDispatch()\r\n    \r\n    function joinRoom(room) {\r\n        dispatch(addRoom(room))\r\n        dispatch(addMember({roomId: id, userId: user.id}))\r\n        socket.emit(\"join_room\", `room${room}`)\r\n      }\r\n\r\n      \r\n    function sendMessage(user, message, roomId) {\r\n        if (message.replace(/\\s+/g, '').length === 0) return\r\n        socket.emit(\"send_message\", {...user, message, room: `room${roomId}`})\r\n\r\n        setMessage(\"\")\r\n      } \r\n\r\n    function handleKeydown(e) {\r\n        if (e.key === \"Enter\") {\r\n            sendMessage(user, message, id)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            const messagesFromServer = await api.get(`/messages/room${id}`).then(res => res.data)\r\n            setMessageHistory(messagesFromServer.reverse())\r\n        }\r\n        fetchMessages();\r\n        socket.on(\"receive_message\", (data) => {\r\n            setMessageHistory(prev => [data, ...prev])\r\n        })\r\n    }, [])\r\n\r\n  return (\r\n    <div className={styles.room}>\r\n        <Link to=\"/rooms\" className={styles.close}>Назад</Link>\r\n        <h1>Room {id}</h1>\r\n        <button>Участники</button>\r\n        {   \r\n            user.rooms.find(el => el == id)\r\n            ?\r\n            <>\r\n            <div className={styles.history}>\r\n                {messageHistory.map(mess =>\r\n                <div className={styles.message}>\r\n                    <h3>{mess.name}</h3>\r\n                    {mess.message}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <div className={styles.send}>\r\n                <input\r\n                    placeholder=\"Введите сообщение\"\r\n                    onChange={e => setMessage(e.target.value)}\r\n                    value={message}\r\n                    onKeyDown={e => handleKeydown(e)}>\r\n                </input>\r\n                <button onClick={() => sendMessage(user, message, id)}>Отправить</button>\r\n            </div>\r\n            </>\r\n            :\r\n            <div className={styles.history}>\r\n                <button onClick={() => joinRoom(id)}>Войти</button>\r\n            </div>\r\n        }\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleRoom"],"mappings":"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"},"metadata":{},"sourceType":"module"}